import Head from "next/head";
import { useEffect, useState } from "react";
import {
  AppShell,
  Navbar,
  Header,
  NavLink,
  MediaQuery,
  Burger,
  useMantineTheme,
} from "@mantine/core";
import { IconDatabase, IconChevronRight, IconCircleOff } from "@tabler/icons";
import axios from "axios";

export default function Home() {
  const theme = useMantineTheme();
  const [opened, setOpened] = useState(false);
  const [active, setActive] = useState(9999);

  const [databases, setDatabases] = useState([]);

  const handleGetDatabases = async () => {
    try {
      const resGetDatabases = await axios.get("http://localhost:8000/");

      console.log("resGetDatabases -->", resGetDatabases.data.bdd);

      const data = resGetDatabases.data.bdd.map((el) => {
        return {
          icon: IconDatabase,
          label: el,
          rightSection: <IconChevronRight size={14} stroke={1.5} />,
        };
      });
      setDatabases(data);
    } catch (e) {
      console.log("error ->", e.message);
    }
  };

  const handleGetDataFromDatabases = async (url) => {
    try {
      const resBack = await axios.get(`http://localhost:8000/${url}`);

      console.log("resBack -->", resBack);
    } catch (e) {
      console.log("error ->", e.message);
    }
  };

  let items = databases.map((item, index) => {
    return (
      <NavLink
        key={item.label}
        active={index === active}
        label={item.label}
        description={item.description}
        rightSection={item.rightSection}
        icon={<item.icon size={16} stroke={1.5} />}
        onClick={(e) => {
          handleGetDataFromDatabases(e.target.innerText);
          setActive(index);
        }}
        color="violet"
        variant="subtle"
      />
    );
  });

  if (databases.length === 0) {
    items = (
      <NavLink
        label="Aucun résultat"
        icon={<IconCircleOff size={16} stroke={1.5} />}
        disabled
      />
    );
  }

  useEffect(() => {
    handleGetDatabases();
  }, []);

  return (
    <div>
      <Head>
        <title>Web service database</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppShell
        styles={{
          main: {
            background:
              theme.colorScheme === "dark"
                ? theme.colors.dark[8]
                : theme.colors.gray[0],
          },
        }}
        navbarOffsetBreakpoint="sm"
        asideOffsetBreakpoint="sm"
        navbar={
          <Navbar
            p="md"
            hiddenBreakpoint="sm"
            hidden={!opened}
            width={{ sm: 200, lg: 300 }}
            style={{
              paddingLeft: "0px",
              paddingRight: "0px",
              paddingTop: "0px",
            }}
          >
            <div
              style={{
                fontWeight: "700",
                padding: "15px",
                paddingLeft: "10px",
              }}
            >
              Liste des bases de données :
            </div>
            {items}
          </Navbar>
        }
        header={
          <Header height={{ base: 50, md: 70 }} p="md">
            <div
              style={{ display: "flex", alignItems: "center", height: "100%" }}
            >
              <MediaQuery largerThan="sm" styles={{ display: "none" }}>
                <Burger
                  opened={opened}
                  onClick={() => setOpened((o) => !o)}
                  size="sm"
                  color={theme.colors.gray[6]}
                  mr="xl"
                />
              </MediaQuery>
              <div style={{ textAlign: "center", fontWeight: "800" }}>
                Web service
              </div>
            </div>
          </Header>
        }
      >
        {/* main content */}

        <div
          style={{
            width: "100%",
            height: "100%",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            fontSize: "45px",
            position: "relative",
          }}
        >
          <div>Aucune base sélectionée</div>
        </div>
      </AppShell>
    </div>
  );
}
